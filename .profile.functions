# Usage: if [[ `at_mit` == "true" && `laptop_plugged_in` == "true" ]]; then 
#          echo "hi"
#        else
#          echo "bye"
#        fi

function network_is_connected {
    
    oldwired=$wired
    oldwireless=$wireless
    unset wired
    unset wireless

    wiredStatus=`ifconfig en0 | grep status | grep -vc inactive`
    wirelessStatus=`ifconfig en1 | grep status | grep -vc inactive`
    
    if [[ $wiredStatus != "0" ]]; then
        wired=true
    fi

    if [[ $wirelessStatus != "0" ]]; then
        wireless=true
    fi

    if [[ $wired || $wireless ]]; then
        echo "true"
    else
        echo "false"
    fi
    
    wired=$oldwired
    wireless=$oldwireless
}

function laptop_plugged_in {
    ioreg -l | grep ExternalConnected | grep -q " Yes";
    if [ "${?}" == 0 ]; then
        echo "true"
    else
        echo "false"
    fi
}

function at_mit {
    hostname | grep -q "mit.edu"
    if [ "${?}" == 0 ]; then
        echo "true"
    else
        echo "false"
    fi
}

function slocate {
    mdfind "kMDItemDisplayName == '$@'wc";
}

function stripext {
    echo $1 | python -c 'import sys,os; s=sys.stdin.read(); print os.path.extsep.join(s.split(os.path.extsep)[:-1])'
}

function getext {
    echo $1 | python -c 'import sys,os; s=sys.stdin.read(); print s.split(os.path.extsep)[-1]'
}

function dirname {
    echo $1 | python -c 'import sys,os; s=sys.stdin.read(); print os.path.dirname(s) or "."'
}

function get_pw {
  #security 2>&1 >/dev/null find-generic-password -ga katokop1@gmail.com \
  #|ruby -e 'print $1 if STDIN.gets =~ /^password: "(.*)"$/'
  get_pw.py -a $1
}

function enc {
    CIPHER=aes-128-cbc
    if [[ $1 = '-p' ]]; then
        INFILE=$3
        PASSWORD=$2
    elif [[ $1 = '-k' ]]; then
        INFILE=$2
        PASSWORD=`get_pw generic`
    else
        INFILE=$1
        PASSWORD=""
    fi
    OUTFILE=${INFILE}.${CIPHER}
    if [[ $PASSWORD = "" ]]; then
        openssl enc -$CIPHER -e -in $INFILE -out $OUTFILE        
    else
        openssl enc -$CIPHER -k $PASSWORD -e -in $INFILE -out $OUTFILE
    fi
    echo $OUTFILE
}

function dec {
    if [[ $1 = '-p' ]]; then
        INFILE=$3
        PASSWORD=$2
    elif [[ $1 = '-k' ]]; then
        INFILE=$2
        PASSWORD=`get_pw generic`
    else
        INFILE=$1
        PASSWORD=""
    fi
    OUTFILE=`stripext $INFILE`
    CIPHER=`getext $INFILE`
    if [[ $PASSWORD = "" ]]; then
        openssl enc -$CIPHER -d -in $INFILE -out $OUTFILE        
    else
        openssl enc -$CIPHER -k $PASSWORD -d -in $INFILE -out $OUTFILE
    fi
    echo $OUTFILE
}

function tbzip {
    EXT=`getext $1`
    if [[ $EXT = 'bz2' || $EXT = 'tbz2' ]]; then
        OUTFILE=$1
        tar jcf $@
    else
        OUTFILE=$(dirname $1)/archive.tar.bz2
        tar jcf $OUTFILE $@
    fi
    echo $OUTFILE
}

function tbzenc {
    ARC=`tbzip $@`
    enc $ARC
}

function tbzenc_auto {
    ARC=`tbzip $@`
    enc -k $ARC
}

# Spotlight
function loc {
	mdfind $1 | grep $1
}

# Quicklook
function ql {
    qlmanage -p "$@" > /dev/null 2>&1
}
alias p=ql

# Deep (recursive) grep
#function dgrep {
#    #find . -name "$2" -exec grep -Hn "$1" {} \;
#    grep $1 . -rn --include=$2
#}
alias grepf=dgrep
alias rgrep=dgrep
alias grepr=dgrep
alias todos="grep TODO *.py | sed 's/  //g' | sed 's/\(.*\):# TODO \(.*\)/\2 (\1)/'"
alias hacks="grep HACK *.py | sed 's/  //g' | sed 's/\(.*\):# HACK \(.*\)/\2 (\1)/'"

alias svndiff='svn diff --diff-cmd=fmdiff'

alias skim='open -a Skim'

function aps_compare {
    aps $@
    osascript -e 'tell application "Adobe Photoshop CS3" to do action "Compare Open Images" from "jrk"'
}

#function zigci {
#    cwd=`pwd`
#    target="$cwd/$1"
#    echo "Checking in $target..."
#    osascript -e "tell app \"ZigVersion\" to check in {\"$target\"}"
#}

function imagediff {
    convert $1 $2 -compose Difference -composite miff:- |\
    identify -verbose - |\
    sed -n '/statistics:/,/^  [^ ]/ p'
}

source ~/.profile.functions.kerberos
